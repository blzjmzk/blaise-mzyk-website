"use client";
import SimpleMDE from "react-simplemde-editor";
import "easymde/dist/easymde.min.css";
import { Controller, useForm } from "react-hook-form";
import { useRouter } from "next/navigation";
import { postSchema } from "@/app/validationSchemas";
import { z } from "zod";
import { useEffect, useState } from "react";
import { zodResolver } from "@hookform/resolvers/zod";
import axios from "axios";
import styles from "./PostForm.module.css";
import { transliterate } from "transliteration";

type PostFormData = z.infer<typeof postSchema>;

const PostForm = () => {
  const [autoGeneratedSlug, setAutoGeneratedSlug] = useState("");

  const router = useRouter();

  const {
    register,
    control,
    handleSubmit,
    formState: { errors },
    watch,
  } = useForm<PostFormData>({
    resolver: zodResolver(postSchema),
  });

  const title = watch("title");
  useEffect(() => {
    const transformedSlug = title
      ? transliterate(title).toLowerCase().replace(/\s+/g, "-")
      : "";
    setAutoGeneratedSlug(transformedSlug);
  }, [title]);

  const [error, setError] = useState("");
  const [isSubmitting, setSubmitting] = useState(false);

  const onSubmit = handleSubmit(async (data) => {
    try {
      setSubmitting(true);
      await axios.post("/api/posts", data);
      router.push("/blaise");
      router.refresh();
    } catch (error) {
      setSubmitting(false);
      setError("An unexpected error occurred.");
    }
  });

  return (
    <form onSubmit={onSubmit} className={styles.form}>
      <input
        id="title"
        type="text"
        placeholder="Add Post Title..."
        {...register("title")}
      />
      <input
        id="slug"
        type="text"
        value={autoGeneratedSlug}
        {...register("slug")}
        placeholder="Post Slug..."
        disabled
      />

      <input
        id="category"
        type="text"
        {...register("category")}
        placeholder="Add Post Category..."
      />
      <textarea
        id="description"
        rows={8}
        placeholder="Add Post Description..."
        {...register("description")}
      />
      <div>
        <Controller
          name="content"
          control={control}
          render={({ field }) => (
            <SimpleMDE placeholder="Add Post Content..." {...field} />
          )}
        />
      </div>
      <button type="submit">Submit New Post</button>
    </form>
  );
};

export default PostForm;
