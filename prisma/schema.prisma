// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  slug        String   @unique @db.VarChar(255)
  category    String   @db.VarChar(30)
  description String   @db.Text
  content     String   @db.Text
  isPublished Boolean  @default(true)
  publishedAt DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model BookNote {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  author      String   @db.VarChar(255)
  year        String   @db.VarChar(255)
  cover       String   @db.VarChar(255)
  slug        String   @unique @db.VarChar(255)
  description String   @db.Text
  highlights  String   @db.Text
  thoughts    String   @db.Text
  publishedAt DateTime @default(now())
}

model Project {
  id          Int      @id @default(autoincrement())
  order       String   @unique @db.VarChar(255)
  image       String   @db.VarChar(255)
  title       String   @db.VarChar(255)
  type        String   @db.VarChar(30)
  description String   @db.Text
  features    String   @db.Text
  codeLink    String?  @db.VarChar(255)
  liveLink    String?  @db.VarChar(255)
  designLink  String?  @db.VarChar(255)
  publishedAt DateTime @default(now())
}

model Publication {
  id            Int     @id @default(autoincrement())
  type          String  @db.VarChar(255)
  language      String  @db.VarChar(255)
  year          String  @db.VarChar(255)
  title         String  @db.VarChar(255)
  journalName   String? @db.VarChar(255)
  journalIssue  String? @db.VarChar(255)
  bookName      String? @db.VarChar(255)
  bookEditors   String? @db.VarChar(255)
  bookPages     String? @db.VarChar(255)
  bookPublisher String? @db.VarChar(255)
  doiLink       String? @db.VarChar(255)
  link          String? @db.Text
}

model Talk {
  id         Int     @id @default(autoincrement())
  title      String  @db.VarChar(255)
  conference String  @db.VarChar(255)
  details    String  @db.VarChar(255)
  year       String  @db.VarChar(255)
  isOnline   Boolean @default(false)
}

//AUTHORIZATION
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String    @id @default(cuid())
  name           String?   @unique
  email          String?
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  sessions       Session[]
  hashedPassword String?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
